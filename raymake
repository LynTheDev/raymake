#!/bin/bash

# Project Done.
if [ -z "$1" ]; then
    echo "ERROR: Missing folder name."
    echo "USAGE: raymake (folder name)"
    exit
fi

if [ -d "$1" ]; then
    echo "ERROR: Project aleardy exists!"
    exit
fi

echo "Creating project folder."
mkdir -p $1
cd $1
echo "Done."

echo "Creating Files."
touch CMakeLists.txt
touch batch.cpp
mkdir src
touch src/game.cpp
mkdir include
touch include/game.h
mkdir external
echo "Done."

echo "Obtaining Raylib."
cd external
git clone https://github.com/raysan5/raylib
cd ..
echo "Done."

echo "Creating game header."
echo """#pragma once

#include <raylib.h>
#include <raymath.h>

void init();
void update(float dt);
void draw();
""" >> include/game.h
echo "Done."

echo "Creating game code base."
echo """#include \"game.h\"

void init() {

}

void update(float dt) {

}

void draw() {

}

void unload() {

}
""" >> src/game.cpp
echo "Done."
echo "Don't forget to create actual game code!"

echo "Creating batch."
echo """#include \"game.h\"
#include <raylib.h>

int main() {
    init();

    while(!WindowShouldClose()) {
        auto dt = GetFrameTime();
        update(dt);

        BeginDrawing();
            draw();
        EndDrawing();
    }

    unload();

return 0;
}
""" >> batch.cpp
echo "Done."

echo "Creating CMakeFile."
echo """cmake_minimum_required(VERSION 3.10)
project($1)

add_subdirectory(external/raylib)

add_executable($1
    batch.cpp

    src/game.cpp
)

target_include_directories($1 PRIVATE
    include/
)

target_link_libraries($1 PRIVATE
    raylib
)
""" >> CMakeLists.txt
echo "Done."

echo "Happy coding."
